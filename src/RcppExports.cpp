// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// sessionise
std::list < std::vector < int > > sessionise(std::list < std::vector < int > > timestamps, int threshold = 3600);
RcppExport SEXP reconstructr_sessionise(SEXP timestampsSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::list < std::vector < int > > >::type timestamps(timestampsSEXP );
        Rcpp::traits::input_parameter< int >::type threshold(thresholdSEXP );
        std::list < std::vector < int > > __result = sessionise(timestamps, threshold);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// session_length
std::vector < int > session_length(std::list < std::vector < int > > sessions, int padding_value = 430, bool preserve_single_events = false, bool strip_last = false);
RcppExport SEXP reconstructr_session_length(SEXP sessionsSEXP, SEXP padding_valueSEXP, SEXP preserve_single_eventsSEXP, SEXP strip_lastSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::list < std::vector < int > > >::type sessions(sessionsSEXP );
        Rcpp::traits::input_parameter< int >::type padding_value(padding_valueSEXP );
        Rcpp::traits::input_parameter< bool >::type preserve_single_events(preserve_single_eventsSEXP );
        Rcpp::traits::input_parameter< bool >::type strip_last(strip_lastSEXP );
        std::vector < int > __result = session_length(sessions, padding_value, preserve_single_events, strip_last);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// session_events
std::vector < int > session_events(std::list < std::vector < int > > sessions);
RcppExport SEXP reconstructr_session_events(SEXP sessionsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::list < std::vector < int > > >::type sessions(sessionsSEXP );
        std::vector < int > __result = session_events(sessions);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// c_time_per_event
std::list < std::vector < int > > c_time_per_event(std::list < std::vector < int > > sessions);
RcppExport SEXP reconstructr_c_time_per_event(SEXP sessionsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::list < std::vector < int > > >::type sessions(sessionsSEXP );
        std::list < std::vector < int > > __result = c_time_per_event(sessions);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
